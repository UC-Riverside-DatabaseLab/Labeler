# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-06-21 00:19
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import label.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('quiz', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('post', '0001_initial'),
        ('label', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Colname',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colname', models.CharField(max_length=255, verbose_name='colname')),
                ('creator', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='creator')),
            ],
            options={
                'verbose_name_plural': 'column names',
                'verbose_name': 'column names',
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='AsterixDB', max_length=255, verbose_name='username')),
                ('ip', models.CharField(max_length=255, verbose_name='ip')),
                ('password', models.CharField(default='AsterixDB', max_length=255, verbose_name='password')),
                ('dbname', models.CharField(max_length=255, verbose_name='dbname')),
                ('port', models.PositiveIntegerField(default=3306, verbose_name='port')),
                ('is_mysql', models.BooleanField(default=True, verbose_name='is_mysql')),
                ('creator', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='creator')),
            ],
            options={
                'verbose_name_plural': 'db connections',
                'verbose_name': 'db connection',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('document', models.FileField(upload_to='post list', verbose_name=label.models.Label)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labeler', models.TextField(default=None, max_length=100, verbose_name='labeler')),
            ],
            options={
                'verbose_name_plural': 'participations',
                'verbose_name': 'participation',
            },
        ),
        migrations.CreateModel(
            name='Tablename',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tablename', models.CharField(max_length=255, verbose_name='table name')),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tablenames', to='task.Connection')),
                ('creator', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='creator')),
            ],
            options={
                'verbose_name_plural': 'table names',
                'verbose_name': 'table names',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('num_posts', models.PositiveIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='number of posts')),
                ('num_labelers', models.CharField(blank=True, max_length=5, verbose_name='number of labelers')),
                ('random_label', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=5, verbose_name='label in random order')),
                ('upload_task', models.FileField(default=None, editable=False, upload_to='post list', verbose_name=label.models.Label)),
                ('creator', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('label_list', models.ManyToManyField(blank=True, default=None, editable=False, to='label.Label', verbose_name='label list')),
                ('post_list', models.ManyToManyField(blank=True, default=None, editable=False, to='post.Post', verbose_name='post list')),
                ('prerequisite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.Quiz', verbose_name='prerequisite')),
            ],
            options={
                'verbose_name_plural': 'tasks',
                'verbose_name': 'task',
            },
        ),
        migrations.AddField(
            model_name='participation',
            name='task',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='task.Task', verbose_name='task'),
        ),
        migrations.AddField(
            model_name='colname',
            name='tablename',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colnames', to='task.Tablename'),
        ),
        migrations.AlterUniqueTogether(
            name='participation',
            unique_together=set([('task', 'labeler')]),
        ),
        migrations.AlterUniqueTogether(
            name='connection',
            unique_together=set([('username', 'ip', 'dbname', 'port')]),
        ),
    ]
